<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="bafl_app.CheerCompView"
             Title="{Binding Path=Name}">

    <RefreshView Refreshing="RefreshView_Refreshing" IsRefreshing="{Binding Path=IsLoading}">
        <ScrollView x:Name="scrollViewMain">
            <VerticalStackLayout x:Name="stackLay" Margin="5,5,5,5">
                <!-- refresh label and bar -->
                <Label Text="{Binding Path=LastUpdated}" FontSize="Micro" HorizontalOptions="Center" TextColor="{StaticResource Gray500}" />
                <Grid BackgroundColor="{StaticResource Primary}" HorizontalOptions="Fill" HeightRequest="1"/>

                <!-- optional message, displayed only if present -->
                <Label Text="{Binding Path=Message}" TextColor="{StaticResource Primary}"
                       FontSize="Medium" HorizontalTextAlignment="Center" IsVisible="{Binding Path=HasMessage}"
                       BackgroundColor="{StaticResource Gray300}" Margin="0,0,0,5"/>

                <!-- the event date-->
                <Label Text="{Binding Path=EventDate}" Margin="0,0,0,5"
                       HorizontalTextAlignment="Center" FontSize="Large" TextColor="{StaticResource Secondary}" />

                <!-- event note -->
                <Label Text="Real-time schedule below. Doors only open for entry &amp; exit during breaks." FontSize="Small"
                       HorizontalTextAlignment="Center" Margin="10,0,10,5" />

                <!-- doors open time -->
                <HorizontalStackLayout HorizontalOptions="Center">
                    <Label Text="Doors open @ " />
                    <Label Text="{Binding Path=DoorsOpen}" />
                    <Label Margin="20, 0, 0, 0" Text="Event Info" Style="{StaticResource Key=Hyperlink}"
                           IsVisible="{Binding Path=HasMoreInfo}">
                        <Label.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TapGestureMoreInfo_Tapped" />
                        </Label.GestureRecognizers>
                    </Label>
                    <Label Margin="20, 0, 0, 0" Text="Buy Tickets" Style="{StaticResource Key=Hyperlink}"
                           IsVisible="{Binding Path=HasBuyTickets}">
                        <Label.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TapGestureBuyTickets_Tapped" />
                        </Label.GestureRecognizers>
                    </Label>
                </HorizontalStackLayout>

                <!-- This was designed as a group of multiple buttons rather than
                typical state switches to avoid a bug on Android that causes the
                buttons to disappear when changing visual state -->
                <Grid HorizontalOptions="FillAndExpand">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <Button Text="{Binding Path=MainText}" HorizontalOptions="Fill" 
                            Grid.Column="0" Margin="2,0,2,0" Padding="0,8,0,8"
                            Clicked="CheerSection_Clicked" x:Name="CheerButtonOn"
                            IsVisible="{Binding Path=CheerShown}"/>
                    <Button Text="{Binding Path=MainText}" HorizontalOptions="Fill" 
                            Grid.Column="0" Margin="2,0,2,0" Padding="0,8,0,8"
                            Clicked="CheerSection_Clicked" x:Name="CheerButtonOff"
                            IsVisible="{Binding Path=MascotShown}"/>
                    <Button Text="Mascot" HorizontalOptions="Fill" 
                            Grid.Column="1" Margin="2,0,2,0" Padding="0,8,0,8"
                            Clicked="MascotSection_Clicked" x:Name="MascotButtonOn"
                            IsVisible="{Binding Path=MascotShown}"/>
                    <Button Text="Mascot" HorizontalOptions="Fill" 
                            Grid.Column="1" Margin="2,0,2,0" Padding="0,8,0,8"
                            Clicked="MascotSection_Clicked" x:Name="MascotButtonOff"
                            IsVisible="{Binding Path=CheerShown}"/>
                    <Image Source="{AppThemeBinding Light=goto_light.png, Dark=goto_dark.png}" Grid.Column="2" MaximumHeightRequest="30" MaximumWidthRequest="30">
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Tapped="Goto_Clicked" />
                        </Image.GestureRecognizers>
                    </Image>
                </Grid>

                <!-- header -->
                <Grid HorizontalOptions="Fill" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Text="Team" FontSize="Large" Grid.Column="0" HorizontalTextAlignment="Center" />
                    <Label Text="Scheduled" FontSize="Large" Grid.Column="1" HorizontalTextAlignment="Center" />
                    <Label Text="Actual" FontSize="Large" Grid.Column="2" HorizontalTextAlignment="Center" />
                </Grid>

                <Grid BackgroundColor="{StaticResource Primary}" HorizontalOptions="Fill" HeightRequest="5"/>

                <!-- list of schedule items -->
                <VerticalStackLayout BindableLayout.ItemsSource="{Binding Path=Items}" x:Name="layoutList">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalOptions="Fill" Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*" />
                                </Grid.RowDefinitions>

                                <!-- highlight the row is 'Highlight' is on -->
                                <Grid Grid.ColumnSpan="3" BackgroundColor="Yellow" Opacity=".2" IsVisible="{Binding Path=Highlight}" Margin="-5" />

                                <!-- add a shape to the row if 'Notable' is on -->
                                <Border StrokeThickness="2" Stroke="{StaticResource Gray500}" StrokeShape="RoundRectangle 30,0,0,30"
                                        IsVisible="{Binding Path=Notable}" Grid.ColumnSpan="3" Margin="-5" BackgroundColor="Transparent" />

                                <!-- the data columns-->
                                <Label Text="{Binding Path=Name}" Grid.Column="0" HorizontalTextAlignment="Center"
                                        VerticalTextAlignment="Center" LineBreakMode="WordWrap" />
                                <Label Text="{Binding Path=ScheduledStart}" Grid.Column="1" HorizontalTextAlignment="Center"
                                        VerticalTextAlignment="Center" LineBreakMode="WordWrap" />
                                <Label Text="{Binding Path=Status}" Grid.Column="2" HorizontalTextAlignment="Center"
                                        VerticalTextAlignment="Center" LineBreakMode="WordWrap" />
                                
                            </Grid>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </VerticalStackLayout>

            </VerticalStackLayout>
        </ScrollView>
    </RefreshView>

</ContentPage>

